{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:22.270439-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:26.510989-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gvTmvs3HDQCJtc+iCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Part 1: Problem"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:44:57.369545-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:45:00.793879-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "joJn39PHDQC6Epr8CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "From the AoC website:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:23:53.241141-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:23:57.98469-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jPQEts3HDQCIIlsjCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The newly-improved calibration document consists of lines of text; each line originally contained a specific calibration value that the Elves now need to recover. On each line, the calibration value can be found by combining the first digit and the last digit (in that order) to form a single two-digit number.\n\nFor example:\n\n1abc2\npqr3stu8vwx\na1b2c3d4e5f\ntreb7uchet\n\nIn this example, the calibration values of these four lines are 12, 38, 15, and 77. Adding these together produces 142.\n\nConsider your entire calibration document. What is the sum of all of the calibration values?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:10.997825-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:32.951976-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mPM6vs3HDQCJeXzTCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Part 1: Solution"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:39.449418-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:26:52.563156-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Jf2pv83HDQCKgpHOCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I'm putting the inputs into my Git repository, so I want a way to load them from that."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:24:05.967136-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:28:30.538473-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "V4bDts3HDQCIPi3kCoPCkQ=="
				},
				"code" : "repo := GtGitRepository forRepoNamed: 'aoc2023'.\rrepo icebergRepository repositoryDirectory"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:45:10.117522-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:45:45.612142-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jgIq4NPHDQC6f761CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "That said, I'll start with just pulling it off the local filesystem for now, since it requires the least ceremony."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:28:58.86151-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:46:03.400435-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eVU8yM3HDQCORE8FCoPCkQ=="
				},
				"code" : "input := '/Users/dlg/dev/gt/aoc2023/inputs/day01.txt' asFileReference readStream\r\t\tupToEnd trimBoth.\rexampleInput := '1abc2\npqr3stu8vwx\na1b2c3d4e5f\ntreb7uchet'.\rlines := Character lf split: input"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:30:21.123554-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:23.091625-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PJQjzc3HDQCRvvxxCoPCkQ=="
				},
				"code" : "lines\r\tinject: 0\r\tinto: [ :sum :line | \r\t\t| calibration digits |\r\t\tdigits := line select: #isDigit.\r\t\tcalibration := digits first asString , digits last asString.\r\t\tcalibration asNumber + sum ]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:36:08.381243-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:36:13.818821-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ZxEHbdXHDQCOE8MqCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This produced the correct answer for my input."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T08:27:37.258013-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T08:28:00.327898-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "T0/8d9THDQCLxi9HCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I'll put this into an example:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T08:28:17.81327-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:39:38.282769-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ICBnetTHDQCNGVRECoPCkQ=="
				},
				"code" : "DgAoc2023Day01 new\r\tlines: (Character lf split: input);\r\texampleSolutionPart1"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:37:58.380059-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:38:27.972767-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YX6Vc9XHDQCPZAsVCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I can write the above ^ and Glamorous Toolkit presents tools for creating classes and methods that don't exist yet. After going through that process, the following is the implemented example:"
			},
			{
				"__type" : "exampleSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:36:54.529368-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T09:36:54.529368-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Rz3Hb9XHDQCO/dOnCoPCkQ=="
				},
				"exampleSelector" : "examplePart1Solution",
				"previewHeight" : 200,
				"previewShowSelector" : "gtViewsFor:",
				"exampleBehaviorName" : "DgAoc2023Day01",
				"codeExpanded" : true,
				"previewExpanded" : false,
				"noCode" : false
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:25.917598-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:29.419006-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aP8v8c3HDQCYs/jcCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Part 2: Problem"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:29.787277-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:33.520958-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Fgxr8c3HDQCZEckTCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Your calculation isn't quite right. It looks like some of the digits are actually spelled out with letters: one, two, three, four, five, six, seven, eight, and nine also count as valid \"digits\".\n\nEquipped with this new information, you now need to find the real first and last digit on each line. For example:\n\ntwo1nine\neightwothree\nabcone2threexyz\nxtwone3four\n4nineeightseven2\nzoneight234\n7pqrstsixteen\n\nIn this example, the calibration values are 29, 83, 13, 24, 42, 14, and 76. Adding these together produces 281.\n\nWhat is the sum of all of the calibration values?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:37.119148-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:40:40.010611-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GO7a8c3HDQCZIGNgCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Part 2: Solution"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:41:40.103901-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:41:54.420965-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "lfRl9c3HDQCaGqtMCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Part 1 allowed us to consider only characters. Now we have to consider substrings."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:41:54.878707-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:42:22.235397-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xG999s3HDQCcDbN8CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "One approach is to mutate the input by replacing every instance of spelled-out-numbers with their numeral equivalents. Then we can reuse the same reduction."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:54:28.430322-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:55:02.560574-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "urtnI87HDQClH33wCoPCkQ=="
				},
				"code" : "exampleInput := 'two1nine\neightwothree\nabcone2threexyz\nxtwone3four\n4nineeightseven2\nzoneight234\n7pqrstsixteen'.\rexampleLines := (Character lf) split: exampleInput."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:55:31.148677-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:56:04.74374-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "BrwkJ87HDQCnjoNnCoPCkQ=="
				},
				"code" : "exampleLines\r\tcollect: [ :line | \r\t\t| calibration digits |\r\t\tdigits := line replaceSpelledOutNumbers select: #isDigit.\r\t\t\"calibration := digits first asString , digits last asString \"]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:46:46.816746-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:46:53.71674-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "n8rb5dPHDQC+oyc0CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "My first attempt produced an incorrect answer, because:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T00:59:20.302598-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:46:45.164273-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SIqYNM7HDQCn/j4qCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The replacement has to support letters that are shared, as in the second line of the example: `eightwothree` should produce `823` but the `t` is shared between the end of `eight` and the beginning of `two`."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:52:12.976366-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:47:10.680085-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "q4ZN8c7HDQCsxFdNCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**It's time to mold the environment to the problem, and make it more straightforward to reason about.**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:52:32.470662-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:48:07.669528-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2fUR887HDQCvZyWlCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Given the spelling of the numbers one through nine, only one final letter can be shared between two adjacent spelled-out numbers:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:47:25.246267-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:49:14.206879-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "v/A36NPHDQC/6FPpCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`oneeight twone threeight fiveight sevenine eighthree eightwo nineeight`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:48:35.120544-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:48:49.622051-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "DiFi7NPHDQCBwnOSCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Replacing these first, then handling the standalone `one` through `nine`, should give us what we want."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:49:19.788412-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T13:16:01.937909-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "h7UL79PHDQCFGJ50CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I've created an extension method on {{gtClass:name=String}} named {{gtMethod:name=String>>#replaceSpelledOutNumbersIncorrect}} "
			},
			{
				"__type" : "exampleSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T08:04:48.712173-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T08:04:48.712173-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6PZpJtTHDQCLZL2pCoPCkQ=="
				},
				"exampleSelector" : "exampleReplaceSpelledOutNumbersIncorrect",
				"previewHeight" : 200,
				"previewShowSelector" : "gtViewsFor:",
				"exampleBehaviorName" : "DgAoc2023Day01",
				"codeExpanded" : true,
				"previewExpanded" : false,
				"noCode" : false
			},
			{
				"__type" : "exampleSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:24:36.816693-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:24:36.816693-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wEdiGtbHDQCbHI9gCoPCkQ=="
				},
				"exampleSelector" : "exampleSolutionPart2",
				"previewHeight" : 200,
				"previewShowSelector" : "gtViewsFor:",
				"exampleBehaviorName" : "DgAoc2023Day01",
				"codeExpanded" : true,
				"previewExpanded" : false,
				"noCode" : false
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:23:03.156447-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:23:21.601522-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "kxjNFNbHDQCTvNE6CoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Hah, I didn't try to mold the environment, I just kept jabbing at the problem, and my second attempt is also incorrect."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:23:23.107278-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:23:41.800197-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4Y/9FdbHDQCWpPBDCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Letters can be shared in chains, e.g.: `onetwoneighthree`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:29:46.809546-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:30:06.946347-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wvIqh9nHDQCVsWjdCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I want to see a colorization of the input, where spelled-out numbers are highlighted in colors, and intersections are easy to spot."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:23:42.40463-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T10:24:07.183224-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "XwMkF9bHDQCX95luCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This suggests that a character-wise parsing approach will handle those cases and be clearest to understand."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:20.174264-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:26.093459-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "x5K7jNnHDQCYiNVlCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Taking time to make a color map?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:30.238045-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:34.158383-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iSZVjdnHDQCZUy+PCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "From my experience with GT:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:34.361242-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:38.680908-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dAyUjdnHDQCaBtnpCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "It won't take as long as I fear."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:42.623761-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:31:57.427589-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wmzZjdnHDQCazZBbCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Learning how to do it once, I'll be able to do it even more fluently the next time I want to visualize something in this way."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:32:21.631361-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:32:50.302006-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7FZlkNnHDQCeGTHkCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The first step is to create domain objects. I need a container object for the whole input, and an object for each line of input."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:32:01.575439-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:33:29.796082-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "A1Izj9nHDQCd7Nr9CGucEA=="
				},
				"code" : "DgAoc2023Day01Input fromString: input."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:41:28.939187-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:41:49.436847-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zJgEsdnHDQChuMQ9CGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I was able to create these classes and all of the accessors/methods interactively. A veritable pyramid of inline expanded method definitions at one point."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:41:49.816804-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:42:14.066412-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/ylDstnHDQClHWIwCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now that I have objects, I can create `gtView` methods for them to extend their default inspectors."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:43:13.202571-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T15:11:05.379984-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Ooc7t9nHDQCoQw5zCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "So I'm starting by creating a {{gtMethod:name=DgAoc2023Day01InputLine>>gtColorSpelledOutNumbers:}} method and slapping in a bit of example code from the GT Book (Ludo Game), that creates colorized squares. With that, I can begin to iterate effectively."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:57:05.33364-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T14:57:42.886249-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "l9bU6NnHDQCtFXuwCGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "After 10–15 mins, I have color squares with random colors from a literal array, with a click event that inspects the character at that square from the input line."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T15:10:56.60522-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T15:11:51.102752-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "WeJKGtrHDQCw6q/1CGucEA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Reviewing the Ludo game, I realize I might need to create another class to represent each character. But maybe not, really code-size dependent."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:48:49.946879-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T07:48:59.179933-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "41hE7dPHDQCEQXqdCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Additional Thoughts"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:53:34.846082-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:54:27.487086-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "17nJ9s7HDQCy64GiCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I recall seeing in the GT book a page that shows Pharo's syntax and uses yellow arrows to indicate which pieces of concrete syntax map to which syntax categories. I want to find that and consider how difficult it would be to use that same visual paradigm to elucidate the parsing of these calibrations."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:54:28.545549-05:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-12-01T01:54:28.545549-05:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Ch/9+c7HDQC55EcUCoPCkQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-11-30T10:03:16.747749-05:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-11-30T10:03:16.747749-05:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Day 1"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "da983eb0-c1c7-0d00-9c60-74690cad404f"
	}
}